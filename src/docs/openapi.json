{
  "openapi": "3.0.3",
  "info": {
    "title": "Homework Week 9",
    "description": "Restfull API and Middleware",
    "termsOfService": "http://swagger.io/terms/",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "schemas": {
      "ErrorNotFound": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "error not found"
          }
        }
      },
      "InvalidCredentials": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "invalid email or password"
          }
        }
      },
      "Movie": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "The intern"
          },
          "genres": {
            "type": "string",
            "example": "Drama"
          },
          "year": {
            "type": "integer",
            "example": 2015
          }
        }
      },
      "ErrorInteral": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Unauthenticated"
          }
        }
      },
      "EditMovie": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Interstellar"
          },
          "genres": {
            "type": "string",
            "example": "Sci-Fi"
          },
          "year": {
            "type": "integer",
            "description": "The year's movie.",
            "example": 2014
          }
        }
      },
      "Users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "example@mail.com"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "password": {
            "type": "string",
            "example": "password"
          },
          "role": {
            "type": "string",
            "example": "Admin"
          }
        }
      },
      "ReqBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "example@mail.com"
          },
          "password": {
            "type": "string",
            "example": "admin"
          },
          "gender": {
            "type": "string",
            "example": "male"
          },
          "role": {
            "type": "string",
            "example": "admin"
          }
        }
      },
      "EditUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "example@mail.com"
          },
          "password": {
            "type": "string",
            "example": "admin"
          },
          "role": {
            "type": "string",
            "example": "admin"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "create a new user",
        "requestBody": {
          "description": "Insert email, password, and role",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReqBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "user created successfully"
                    },
                    "email": {
                      "type": "string",
                      "example": "example@mail.com"
                    },
                    "gender": {
                      "type": "string",
                      "example": "male"
                    },
                    "role": {
                      "type": "string",
                      "example": "admin"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInteral"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "example@mail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "login success"
                    },
                    "accessToken": {
                      "type": "string",
                      "example": "generated token"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidCredentials"
                }
              }
            }
          },
          "404": {
            "description": "Error Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          }
        }
      }
    },
    "/movies": {
      "get": {
        "tags": [
          "movies"
        ],
        "summary": "Get a list of movies.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Movie"
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInteral"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "movies"
        ],
        "summary": "add movie",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "The intern"
                  },
                  "genres": {
                    "type": "string",
                    "example": "Drama"
                  },
                  "year": {
                    "type": "integer",
                    "example": 2015
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "movie created successfully"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInteral"
                }
              }
            }
          }
        }
      }
    },
    "/movies/{id}": {
      "get": {
        "tags": [
          "movies"
        ],
        "summary": "retrieve a movie",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of movie",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "get single data film",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "404": {
            "description": "error not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "movies"
        ],
        "summary": "update a movie.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditMovie"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "data updated successfully"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInteral"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "movies"
        ],
        "summary": "delete movie.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id movie for delete.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "data deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInteral"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get a list of users.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Users"
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInteral"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "add user",
        "description": "add user",
        "requestBody": {
          "description": "add user from req body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReqBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "user created successfully"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInteral"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "retrieve a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id of users",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "get single data user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "404": {
            "description": "error not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorNotFound"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "update a user.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "req param  id of user to update.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "data updated successfully"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInteral"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "delete user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "id user for delete.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "data deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorInteral"
                }
              }
            }
          }
        }
      }
    }
  }
}